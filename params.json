{"name":"Php Requirement Analyser","tagline":"Basic php version requirement analyser","body":"*If you are looking for a battle-tested library with a cleaner architecture and more functionality you may find your library of choice at [llaville/php-compat-info](https://github.com/llaville/php-compat-info) for now.*\r\n\r\n\r\n# Php Version Requirement Analyser\r\n\r\nThis repository contains a library and a console application to validate your php files' version requirements.\r\nThe library makes heavy use of [the PHP-Parser library](https://github.com/nikic/PHP-Parser)\r\n\r\n[![Build Status](https://travis-ci.org/suralc/pvra.svg?branch=master)](https://travis-ci.org/suralc/pvra)\r\n[![Dependency Status](https://www.versioneye.com/user/projects/546643934de5ef5022000056/badge.svg?style=flat)](https://www.versioneye.com/user/projects/546643934de5ef5022000056)\r\n[![Coverage Status](https://img.shields.io/coveralls/suralc/pvra.svg)](https://coveralls.io/r/suralc/pvra?branch=master)\r\n\r\n\r\n\r\n## Api - Documentation\r\n\r\nYou may find the incomplete API-documentation [here](http://suralc.github.io/pvra/docs). Please be aware that at this time it is\r\nuncomplete.\r\n\r\n\r\n## Installation and usage of the cli app\r\n\r\nThe packed `pvra.phar` file is available as a download on the releases page (once there is a release). Run\r\n`php pvra.phar` to see a list of available commands. If you downloaded or cloned the repository itself run `php bin/pvra`\r\nfrom the root of the repository. Make sure all dependencies are available (not required if you run from phar), this \r\nrequires you to be able to run `<php> composer install --prefer-dist --no-dev` on your machine.\r\n\r\n### Example\r\n\r\n```php\r\n<?php\r\n\r\n// data/test.php\r\n// code does not make sense, it's still a nice example\r\n\r\ntrait Gamma\r\n{\r\n    public function test(callable $abc, ...$vars) {\r\n        return $this->test()['abc'];\r\n    }\r\n}\r\n```\r\n\r\n__CLI:__ \r\n\r\n`php bin/pvra analyse:file -f data/test.php`\r\n\r\n__OUTPUT:__\r\n\r\n```\r\nRequired version: 5.6.0\r\nVersion 5.4.0\r\n        Reason: Usage of the trait keyword requires PHP 5.4 in .../data/test.php:3.\r\n        Reason: The callable typehint requires php 5.4 in .../data/test.php:5.\r\n        Reason: Function dereferencing requires php 5.4 in .../data/test.php:6.\r\nVersion 5.6.0\r\n        Reason: Variadic arguments require php 5.6 in .../data/test.php:5.\r\n```\r\n\r\n\r\n\r\n\r\n## Installation and usage of the library.\r\n\r\nRun `composer require <package-name>` in the root of your project and include the composer autoloader somewhere.\r\n\r\n```php\r\n<?php\r\n\r\n// autoloading and namespace import is assumed\r\n\r\n$req = new StringRequirementAnalyser('<?php trait abc{}');\r\n\r\n$req->attachRequirementVisitor(new Php54LanguageFeatureNodeWalker);\r\n$req->attachRequirementVisitor(new Php55LanguageFeatureNodeWalker);\r\n$req->attachRequirementVisitor(new Php56LanguageFeatureNodeWalker);\r\n$req->attachRequirementVisitor(new LibraryAdditionsNodeWalker);\r\n\r\n$result = $req->run();\r\n\r\necho $result->getRequiredVersion(), PHP_EOL; // 5.4.0\r\n\r\nforeach($result as $r) {\r\n    echo $r['msg'], 'on line ', $r['line'], PHP_EOL; \r\n}\r\n```\r\n\r\n## Building the phar\r\n\r\n[Box](http://box-project.org/) is required to build the phar. Run `box build` in the repository root. Box requires the code to be inside a git\r\nrepository.\r\n\r\n## Todo\r\n\r\n[See here](https://github.com/suralc/pvra/labels/todo)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}